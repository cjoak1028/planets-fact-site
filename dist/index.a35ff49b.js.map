{"mappings":"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","sources":["src/js/model.js","src/js/script.js"],"sourcesContent":["export const getData = async (filepath) => {\n    try {\n        const res = await fetch(filepath);\n        const json = await res.json();\n        return json;\n    } catch (error) {\n        throw new Error(error);\n    };\n};\n\n\n\n\n\n","import { getData } from './model';\n\nconst hamburgerButton = document.querySelector('.hamburger-button');\nconst hamburgerMenu = document.querySelector('.hamburger-menu');\nconst planetLinks = document.querySelectorAll('.planet-link');\nconst navLinks = document.querySelectorAll('.nav__link');\nconst hamburgerMenuLinks = document.querySelectorAll('.hamburger-menu__link');\nconst subMenuLinks = document.querySelectorAll('.sub-menu-link');\nconst subMenuMobileLinks = document.querySelectorAll('.sub-menu--mobile__link');\nconst subMenuTabletLinks = document.querySelectorAll('.sub-menu--tablet__link');\n\nconst planetImage = document.querySelector('.planet__img');\nconst planetGeoImage = document.querySelector('.planet__geo-img');\nconst planetTitle = document.querySelector('.planet__title');\nconst planetContent = document.querySelector('.planet__content');\nconst planetContentSource = document.querySelector('.content-source__link');\nconst planetStats = document.querySelectorAll('.planet-stat');\n\n// Check whether browser is Safari or not\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nconst mediaQueryList = window.matchMedia(\"screen and (min-width: 47.9em)\");\n\nlet currPlanet = 'mercury';\nlet currPlanetIndex = '0';\nlet currSubMenuIndex = '0';\n\nconst openHamburgerMenu = () => {\n    hamburgerButton.classList.add('open');\n    // Prevent body from scrolling when hamburger button is open\n    document.body.classList.add('overflow-hidden');\n\n    hamburgerMenu.classList = 'hamburger-menu collapsing';\n\n    setTimeout(() => {\n        hamburgerMenu.style.height = `calc(100% - 6.8rem)`; //6.8rem is height of header\n        hamburgerMenu.style.opacity = '100%';\n    }, 1);\n\n    setTimeout(() => {\n        hamburgerMenu.classList = 'hamburger-menu collapse show';\n        hamburgerButton.classList.remove('disabled');\n    }, 500);\n};\n\nconst closeHamburgerMenu = () => {\n    hamburgerButton.classList.remove('open');\n    document.body.classList.remove('overflow-hidden');\n\n    hamburgerMenu.classList = 'hamburger-menu collapsing';\n\n    setTimeout(() => {\n        hamburgerMenu.style.height = '0';\n        hamburgerMenu.style.opacity = '0';\n    }, 1);\n\n    setTimeout(() => {\n        hamburgerMenu.classList = 'hamburger-menu collapse';\n        hamburgerMenu.removeAttribute('style');\n        hamburgerButton.classList.remove('disabled');\n    }, 500);\n};\n\nconst init = (planetsData) => {\n    // Handle click event for hamburger button\n    hamburgerButton.addEventListener('click', () => {\n        hamburgerMenu.classList.toggle('show');\n        hamburgerButton.classList.add('disabled');\n        hamburgerMenu.classList.contains('show') ? openHamburgerMenu() : closeHamburgerMenu();\n    });\n\n    // Closes hamburger menu when screen size hits above small media query while menu is open\n    if (isSafari) {\n        mediaQueryList.addListener((e) => {\n            if (e.matches) {\n                closeHamburgerMenu();\n            }\n        })\n    } else {\n        mediaQueryList.addEventListener('change', () => {\n            if (smallMediaQuery.matches) {\n                closeHamburgerMenu();\n            };\n        });\n    };\n\n    // Handle click event for each planet link\n    planetLinks.forEach(link => {\n        link.addEventListener('click', () => {\n            const prevPlanet = currPlanet;\n            const targetPlanetIndex = link.getAttribute('index');\n            // Prevent anything from happening if planet link is already selected\n            if (targetPlanetIndex === currPlanetIndex) return;\n\n            // Unselect previously selected nav and hamburger-menu links\n            navLinks[currPlanetIndex].classList.remove('selected');\n            hamburgerMenuLinks[currPlanetIndex].classList.remove('selected');\n\n            // Select newly slected nav and hamburger-menu links\n            navLinks[targetPlanetIndex].classList.add('selected');\n            hamburgerMenuLinks[targetPlanetIndex].classList.add('selected');\n\n            currPlanetIndex = targetPlanetIndex;\n\n            const currPlanetData = planetsData[targetPlanetIndex];\n            currPlanet = currPlanetData.name.toLowerCase();\n\n            // Pass currPlanet to subMenuLinks by setting their classes\n            // This is the basis of setting appropriate background color depending on value of currPlanet\n            subMenuLinks.forEach(link => {\n                link.classList.remove(prevPlanet);\n                link.classList.add(currPlanet);\n            });\n\n            // Pass currPlanet as a class to planet image to apply sizing properties\n            planetImage.classList.remove(prevPlanet);\n            planetImage.classList.add(currPlanet);\n\n            // UPDATE PLANET TITLE\n            planetTitle.innerHTML = currPlanetData.name;\n\n            // UPDATE PLANET STATS\n            planetStats.forEach((stat) => {\n                if (stat.classList.contains('stat-rotation')) {\n                    stat.innerHTML = currPlanetData.rotation;\n                } else if (stat.classList.contains('stat-revolution')) {\n                    stat.innerHTML = currPlanetData.revolution;\n                } else if (stat.classList.contains('stat-radius')) {\n                    stat.innerHTML = currPlanetData.radius;\n                } else {\n                    stat.innerHTML = currPlanetData.temperature;\n                };\n            });\n\n            // Hamburger menu planet link for mobile view\n            if (link.classList.contains('hamburger-menu__link')) {\n                // Close hamburger menu when hamburger menu link is clicked\n                closeHamburgerMenu();\n            };\n\n            /////// REFACTOR (SEEMS SIMILAR TO SUBMENU LINK HANDLER) ////////\n            // Select OVERVIEW sub-menu by default (if not selected)\n            if (currSubMenuIndex !== 0) {\n                // Unselect previously selected sub-menu\n                subMenuMobileLinks[currSubMenuIndex].classList.remove('selected');\n                subMenuTabletLinks[currSubMenuIndex].classList.remove('selected');\n                // Select overview sub-menu\n                subMenuMobileLinks[0].classList.add('selected');\n                subMenuTabletLinks[0].classList.add('selected');\n                currSubMenuIndex = 0;\n            };\n\n            planetImage.src = currPlanetData.images.planet;\n            planetGeoImage.classList.add('hide');\n            planetContent.innerHTML = currPlanetData.overview.content;\n            planetContentSource.href = currPlanetData.overview.source;\n            //////////////////////////////////////////////////////////////////\n        });\n    });\n\n    subMenuLinks.forEach(link => {\n        link.addEventListener('click', () => {\n            const targetSubMenuIndex = link.getAttribute('index');\n            if (targetSubMenuIndex === currSubMenuIndex) return;\n\n            // Unselect previously selected content link\n            subMenuMobileLinks[currSubMenuIndex].classList.remove('selected');\n            subMenuTabletLinks[currSubMenuIndex].classList.remove('selected');\n\n            // Select newly selected content link\n            subMenuMobileLinks[targetSubMenuIndex].classList.add('selected');\n            subMenuTabletLinks[targetSubMenuIndex].classList.add('selected');\n\n            currSubMenuIndex = targetSubMenuIndex;\n\n            const currPlanetData = planetsData[currPlanetIndex];\n\n            if (link.classList.contains('overview-link')) {\n                planetImage.src = currPlanetData.images.planet;\n                planetGeoImage.classList.add('hide');\n                planetContent.innerHTML = currPlanetData.overview.content;\n                planetContentSource.href = currPlanetData.overview.source;\n            } else if (link.classList.contains('structure-link')) {\n                planetImage.src = currPlanetData.images.internal;\n                planetGeoImage.classList.add('hide');\n                planetContent.innerHTML = currPlanetData.structure.content;\n                planetContentSource.href = currPlanetData.structure.source;\n            } else {\n                planetImage.src = currPlanetData.images.planet;\n                planetGeoImage.src = currPlanetData.images.geology;\n                planetGeoImage.classList.remove('hide');\n                planetContent.innerHTML = currPlanetData.geology.content;\n                planetContentSource.href = currPlanetData.geology.source;\n            };\n        });\n    });\n};\n\ngetData('./data.json').then(data => {\n    init(data);\n}).catch(err => {\n    console.error(err);\n});\n\n\n\n"],"names":["$c602dea2b43ee55a$var$hamburgerButton","document","querySelector","$c602dea2b43ee55a$var$hamburgerMenu","$c602dea2b43ee55a$var$planetLinks","querySelectorAll","$c602dea2b43ee55a$var$navLinks","$c602dea2b43ee55a$var$hamburgerMenuLinks","$c602dea2b43ee55a$var$subMenuLinks","$c602dea2b43ee55a$var$subMenuMobileLinks","$c602dea2b43ee55a$var$subMenuTabletLinks","$c602dea2b43ee55a$var$planetImage","$c602dea2b43ee55a$var$planetGeoImage","$c602dea2b43ee55a$var$planetTitle","$c602dea2b43ee55a$var$planetContent","$c602dea2b43ee55a$var$planetContentSource","$c602dea2b43ee55a$var$planetStats","$c602dea2b43ee55a$var$isSafari","test","navigator","userAgent","$c602dea2b43ee55a$var$mediaQueryList","window","matchMedia","$c602dea2b43ee55a$var$currPlanet","$c602dea2b43ee55a$var$currPlanetIndex","$c602dea2b43ee55a$var$currSubMenuIndex","$c602dea2b43ee55a$var$closeHamburgerMenu","classList","remove","body","setTimeout","style","height","opacity","removeAttribute","$c602dea2b43ee55a$var$init","planetsData","addEventListener","toggle","add","contains","addListener","e","matches","smallMediaQuery","forEach","link1","prevPlanet","targetPlanetIndex","getAttribute","currPlanetData","name","toLowerCase","link","innerHTML","stat","rotation","revolution","radius","temperature","src","images","planet","overview","content","href","source","targetSubMenuIndex","internal","structure","geology","async","filepath","res","fetch","json","error","Error","$91c814c91793e3c0$export$7a171f172be0782e","then","data","catch","err","console"],"version":3,"file":"index.a35ff49b.js.map"}